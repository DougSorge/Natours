/* These variables will make it easier for us to repeatedly set these colors on our elements. It will also allow me to universally change all set colors if need be.*/
/* In this universal selector we are removing margin and padding as well as changing the box model to measure the width / height from border to border. This is a standard universal reset. */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

/*
  - We have set the overall font size to 10px so that we can easily manipulate and set our properties using the rem unit type. Nice
  -However, if we set the root to a px amount, the default font size set by the user on their browser will be overridden. This is bad practice for accessibility reasons.
  -The solution is to set the root font size as a percentage. In our case, we wanted 10px as a default font size. Assuming that the browser default is set to the standard 16, we have determined that 10 is 62.5% of 16 and set our root size as such.
  - Since we have determined 62.5% is how we want to scale our properties, everything will be adjusted properly even if the user has set their default size on the broswer to 18 or 24 or whatever else. Our styles will be 62.5% of the users default fs.
*/
html {
  font-size: 62.5%;
}

/* Setting font declarations in the body standardizes the fonts for the whole page. Since styles are inherited all font will now have these properties unless overwritten. */
body {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

/* ---------------------- Animations Start ---------------------- */
@-webkit-keyframes heading-fade-in-left {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-20%);
            transform: translateX(-20%);
    font-size: .2rem;
  }
  80% {
    opacity: .7;
    /* transform: translateX(1%); */
  }
  90% {
    opacity: .9;
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0);
            transform: translateX(0);
    /* font-size: 4rem; */
  }
}
@keyframes heading-fade-in-left {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-20%);
            transform: translateX(-20%);
    font-size: .2rem;
  }
  80% {
    opacity: .7;
    /* transform: translateX(1%); */
  }
  90% {
    opacity: .9;
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0);
            transform: translateX(0);
    /* font-size: 4rem; */
  }
}

/* subheading */
@-webkit-keyframes subheading-fade-in-right {
  0% {
    opacity: 0;
    -webkit-transform: translateX(20%);
            transform: translateX(20%);
    font-size: .2rem;
  }
  80% {
    opacity: .7;
    /* transform: translateX(-1%); */
  }
  90% {
    opacity: .9;
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0);
            transform: translateX(0);
  }
}
@keyframes subheading-fade-in-right {
  0% {
    opacity: 0;
    -webkit-transform: translateX(20%);
            transform: translateX(20%);
    font-size: .2rem;
  }
  80% {
    opacity: .7;
    /* transform: translateX(-1%); */
  }
  90% {
    opacity: .9;
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0);
            transform: translateX(0);
  }
}

/* btn fade in */
@-webkit-keyframes btn-appear {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  75% {
    opacity: .5;
  }
  90% {
    opacity: .8;
  }
  100% {
    opacity: 1;
  }
}
@keyframes btn-appear {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  75% {
    opacity: .5;
  }
  90% {
    opacity: .8;
  }
  100% {
    opacity: 1;
  }
}

/* ---------------------- Animations End ---------------------- */
body {
  font-family: 'Lato', Arial, sans-serif;
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 1.7;
  color: #777;
  padding: 2rem;
}

.heading-primary {
  color: #fff;
  /*
   prevents shaky janky animations 
    - This is a hack for animations but is intended to hide or show backside of elements upon 3d rotations
   */
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
}

.heading-primary--top {
  font-size: 6rem;
  font-weight: 700;
  letter-spacing: 3.5rem;
  display: block;
  /* duration | name | delay */
  -webkit-animation: 1.3s heading-fade-in-left;
          animation: 1.3s heading-fade-in-left;
  /*
      This determines how slow or fast the animation happens within the   specified duration
      */
  -webkit-animation-timing-function: ease-in-out;
          animation-timing-function: ease-in-out;
  /*
      - Iteration count determines how many loops the animation will run
      animation-iteration-count: 3; 
      */
}

.heading-primary--bottom {
  font-weight: 400;
  font-size: 2rem;
  letter-spacing: .7rem;
  display: block;
  -webkit-animation: 1.3s subheading-fade-in-right ease-in-out;
          animation: 1.3s subheading-fade-in-right ease-in-out;
}

/* ---------------------- Header End ---------------------- */
.heading-secondary {
  text-transform: uppercase;
  font-size: 3.5rem;
  display: inline-block;
  font-weight: 700;
  color: transparent;
  background: -webkit-gradient(linear, left top, right top, from(#7ed56f), to(#28b485));
  background: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  letter-spacing: 2px;
  -webkit-transition: all .2s;
  transition: all .2s;
}

.heading-secondary:hover {
  -webkit-transform: skewY(2deg) skewX(15deg) scale(1.1);
          transform: skewY(2deg) skewX(15deg) scale(1.1);
  text-shadow: 0.5rem 1rem 1rem rgba(0, 0, 0, 0.5);
}

.tertiary-heading {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase;
}

.paragraph {
  font-size: 1.6rem;
}

.paragraph:not(:last-child) {
  margin-bottom: 3rem;
}

.u-center-text {
  text-align: center;
}

.u-margin-bottom-small {
  margin-bottom: 1.5rem;
}

.u-margin-bottom-med {
  margin-bottom: 4rem;
}

.u-margin-bottom-big {
  margin-bottom: 8rem;
}

/* ---------------------- Header Start ---------------------- */
.header {
  height: 95vh;
  background-image: -webkit-gradient(linear, left top, right bottom, from(rgba(126, 213, 111, 0.8)), to(rgba(40, 180, 133, 0.8))), url("../img/hero.jpg");
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  /* - Clip Path + polygon specifies where  the image WILL STILL BE VISIBLE and not what gets clipped off.
     - The polygon funciton accepts coordinates with which we can create a shape. Each set of coordinates are x and y values separated by a comma. Importantly, the x and y numbers themselves are not wrapped in parenthesis or separated by a comma. 
     - The points of the visible shape are set by using offset from the top left of the image or element that we are clipping. So in this case, when we say x is 100% we are setting that point completely opposite of the left hand side of the element.
  */
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
          clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
  /* REMINDER - when setting an element to absolute positioning, the top, left, right and bottom offsets will adjust the element based on the parent container. In our case, the header. So, the top and left attributes of logo-box will move the div based on the header element. */
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem;
}

.header__logo:hover {
  -webkit-transform: translateY(-2px);
          transform: translateY(-2px);
}

.header__center-heading {
  position: absolute;
  text-align: center;
  /* 
    - Combining top and left with translate and absolute positioning allows us to EASILY center and object within its parent container.
    - When setting top and left we are moving the specified element 50% across the container and 50% down, however, this sets the left edge of our element where we want causing it to look displaced further to the right and down.
    - To adjust the element back over to the left and into the middle where we want, we add on transform translate(x , y). This moves the element over and up based on its own width and height.
    - Basically, by using translate, we are setting the midpoint of the element as its left edge. Now, we can use top, left bottom and right to essentially drag around our element from its midpoint. Success! 
  */
  top: 40%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.row {
  max-width: 114rem;
  margin: 0 auto;
}

.row:not(:last-child) {
  margin-bottom: 8rem;
}

.row::after {
  content: "";
  display: table;
  clear: both;
}

.row [class^="col-"] {
  float: left;
}

.row [class^="col-"]:not(:last-child) {
  margin-right: 6rem;
}

.row .col-1-of-2 {
  width: calc((100% - 6rem) / 2);
}

.row .col-1-of-3 {
  width: calc((100% - (2 * 6rem)) / 3);
}

.row .col-2-of-3 {
  width: calc(2 * ((100% - (2 * 6rem)) / 3)  + 6rem);
}

.row .col-1-of-4 {
  width: calc((100% - (3 * 6rem)) / 4);
}

.row .col-2-of-4 {
  width: calc( 2 * ((100% - (3 * 6rem)) / 4)  + 6rem);
}

.row .col-3-of-4 {
  width: calc( 3 * ((100% - (3 * 6rem)) / 4)  + ( 2 * 6rem));
}

.composition__photo {
  width: 55%;
  -webkit-box-shadow: 0.5rem 1.5rem 4rem rgba(0, 0, 0, 0.4);
          box-shadow: 0.5rem 1.5rem 4rem rgba(0, 0, 0, 0.4);
}

/* ---------------------- Header Btn Start ---------------------- */
.btn:link, .btn:visited {
  text-decoration: none;
  text-transform: uppercase;
  padding: .6rem 3rem;
  border-radius: 2.5rem;
  display: inline-block;
  margin-top: 2.5rem;
  position: relative;
  font-size: 1.6rem;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
}

.btn::after {
  content: '';
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 2.5rem;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-transition: all .3s;
  transition: all .3s;
  z-index: -1;
}

.btn:hover {
  -webkit-transform: translateY(-2px);
          transform: translateY(-2px);
  -webkit-box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4);
          box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4);
}

.btn:active {
  -webkit-transform: translateY(1px);
          transform: translateY(1px);
  -webkit-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.6);
          box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.6);
}

.btn--white {
  background-color: #fff;
  color: #777;
  -webkit-transition: all .3s;
  transition: all .3s;
}

.btn--white::after {
  background-color: #fff;
}

.btn--animated {
  -webkit-animation: btn-appear 1.3s ease-out .6s;
          animation: btn-appear 1.3s ease-out .6s;
  -webkit-animation-fill-mode: backwards;
          animation-fill-mode: backwards;
}

.btn--animated:hover::after {
  -webkit-transform: scale(1.1, 1.4);
          transform: scale(1.1, 1.4);
  opacity: 0;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
}

/* ---------------------- Header Btn End ---------------------- */
.btn-text:link, .btn-text:visited {
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  font-size: 1.6rem;
  -webkit-transition: all .2s;
  transition: all .2s;
}

.btn-text:hover {
  -webkit-transform: translateX(-2px);
          transform: translateX(-2px);
  background-color: #55c57a;
  color: #fff;
  -webkit-box-shadow: 0.5rem 1rem 1rem rgba(0, 0, 0, 0.5);
          box-shadow: 0.5rem 1rem 1rem rgba(0, 0, 0, 0.5);
}

.btn-text:active {
  -webkit-transform: translateY(0);
          transform: translateY(0);
  -webkit-box-shadow: 0.2rem 0.5rem 0.5rem rgba(0, 0, 0, 0.8);
          box-shadow: 0.2rem 0.5rem 0.5rem rgba(0, 0, 0, 0.8);
}

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -25vh;
}
/*# sourceMappingURL=main.css.map */